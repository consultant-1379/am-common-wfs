#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

spring:
  profiles.active: dev
  main.banner-mode: "off"
  application:
    name: '@project.name@'
  servlet.multipart:
    max-request-size: 1000MB
    max-file-size: 1000MB
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  datasource:
    hikari:
      maximum-pool-size: 30
  data:
    redis:
      repositories:
        enabled: false
      host: "eric-cloud-native-kvdb-rd-operand"
      username: default
      port: 6379
      password: default
  lifecycle:
    timeout-per-shutdown-phase: "270s"

server:
  port: 8888
  socket: localhost
  servlet.session.cookie.name: WFS_SESSIONID
  shutdown: graceful
info:
  app:
    name: '@project.name@'
    version: '@project.version@'
    description: A Common wfs for managing the LC of container applications
app:
  command:
    execute:
      defaultTimeOut: 270
cluster:
  config:
    directory: /mnt/cluster_config
docker:
  registry:
    url:
    username:
    password:
containerRegistry:
  global:
    registry:
      pullSecret: regcred
helm:
  url: http://localhost:8080
  debug:
    enabled: false
helmExecutor:
  job:
    template:
      path: /mnt/helm-executor-job-template/job-template.yaml
  maxJobsAllowed: ${HELM_JOBS_LIMIT:30}

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: b3
      consume: [ b3, w3c ]
      produce: [ b3, w3c ]
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
        exclude: "env,heapdump,threaddump"
  endpoint:
    shutdown:
      enabled: true
    env:
      enabled: false
    heapdump:
      enabled: false
    threaddump:
      enabled: false
    health:
      show-details: "ALWAYS"
      diskspace:
        enabled: true
        path: /tmp
        threshold: 100MB
      probes:
        enabled: true
      group:
        readiness:
          include: ping, db, diskSpace, pvcCheck
        liveness:
          include: ping, diskSpace
    prometheus:
      enabled: true
    metrics:
      enabled: true
  metrics:
    distribution:
      sla:
        http:
          server:
            requests: 100ms,300ms,500ms
  prometheus:
    metrics:
      export:
        enabled: true
autoConfigureHelm:
  enabled: false
autoConfigureDocker:
  enabled: true
evnfm:
  namespace: default

logging:
  config: "classpath:logback/logback-${LOG_STREAMINGMETHOD:indirect}.xml"
  pattern:
    #    See more details about pattern layout: https://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html
    #    See more details about logging.pattern.level : https://docs.spring.io/spring-boot/docs/2.1.6.RELEASE/reference/html/boot-features-logging.html#boot-features-custom-log-configuration
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

  endpoints:
    exclude: /actuator/prometheus, /actuator/health
  skip-null-token-endpoints:
    - /actuator/health/liveness
    - /actuator/health/readiness
    - /actuator/prometheus

messaging:
  retry:
    time: 300
    interval: 30

# Contact info for API doc generation
contact:
  name: Honey Badgers
  email: PDLHONEYBA@pdl.internal.ericsson.com

retry:
  defaultWfsRetry:
    maxAttempts: 3
    initialBackoff: 2000
    maxBackoff: 16000
    multiplier: 2.0
  kubectlApiRetry:
    maxAttempts: 5
    initialBackoff: 2000
    maxBackoff: 64000
    multiplier: 2.0
txRetry:
  attempts: ${TX_RETRY_ATTEMPTS:5}
  delayInSeconds: ${TX_RETRY_DELAY_IN_SECONDS:10}

crypto:
  host: http://localhost:10104
  timeout:
    read: 3000
    connection: 3000

kubernetes:
  api:
    timeout:
      connection: 30000
      read: 20000
      write: 20000

health:
  timeout:
    read: 1000
    connection: 1000

healthCheckEnv:
  mountPaths:
    readOnly: /run/secrets/ssl/certs/
    readWrite: /tmp, /wfs, /tmp/helm-logs/

camunda:
  historyTimeToLive: ${CAMUNDA_HISTORY_TIME_TO_LIVE:1}
  bpm:
    historyLevel: ${CAMUNDA_HISTORY_LEVEL:audit}
    generic-properties:
      properties:
        historyCleanupBatchWindowStartTime: "23:00"
        historyCleanupBatchWindowEndTime: "23:30"
        historyCleanupStrategy: removalTimeBased

applyDeprecatedDesignRules: ${APPLY_DEPRECATED_DESIGN_RULES:true}

redis:
  acl:
    enabled: true
  cluster:
    enabled: true

idempotency:
  requestDetailsExpirationSeconds: 300
  retryAfter:
    - endpoint: \/api\/lcm\/v3\/resources\/[^\/]+\/instantiate\/?
      method: POST
      latency: 5
    - endpoint: \/api\/lcm\/v3\/resources\/[^\/]+\/rollback\/?
      method: POST
      latency: 5
    - endpoint: \/api\/lcm\/v3\/resources\/[^\/]+\/scale\/?
      method: POST
      latency: 5
    - endpoint: \/api\/lcm\/v3\/resources\/[^\/]+\/terminate\/?
      method: POST
      latency: 5
    - endpoint: \/api\/lcm\/v3\/resources\/[^\/]+\/upgrade\/?
      method: POST
      latency: 5
    - endpoint: \/api\/internal\/v2\/namespaces\/[^\/]+\/delete\/?
      method: POST
      latency: 5
    - endpoint: \/api\/internal\/kubernetes\/pods\/scale\/down\/?
      method: POST
      latency: 5
    - endpoint: \/api\/internal\/kubernetes\/pvcs\/[^\/]+\/delete\/?
      method:   POST
      latency: 5

asyncRequest:
  recovery:
    timeout: 3