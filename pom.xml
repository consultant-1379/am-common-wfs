<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2024
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.ericsson.orchestration.mgmt</groupId>
    <artifactId>master</artifactId>
    <version>3.67.0-1</version>
    <relativePath/>
  </parent>

  <name>AM Common WF Service</name>
  <artifactId>eric-am-common-wfs</artifactId>
  <version>1.417.0-2-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>eric-am-common-wfs-server-api</module>
    <module>eric-am-common-wfs-common-services</module>
    <module>eric-am-common-utils</module>
    <module>eric-am-common-wfs-command-executor</module>
    <module>eric-am-common-wfs-validation</module>
    <module>eric-am-common-wfs-helm-commands</module>
    <module>eric-am-common-wfs-verification</module>
    <module>eric-am-common-wfs-kubectl-commands</module>
    <module>eric-am-common-wfs-server</module>
    <module>eric-am-common-wfs-testware</module>
    <module>eric-am-common-wfs-coverage</module>
    <module>eric-am-common-wfs-helm-commands-context</module>
    <module>eric-am-common-wfs-migration</module>
  </modules>

  <ciManagement>
    <system>Jenkins CI</system>
    <url>https://fem4s11-eiffel052.eiffel.gic.ericsson.se:8443/jenkins/view/am-common-wfs/</url>
  </ciManagement>

  <properties>
    <eric-eo-evnfm-crypto>0.192.0-5</eric-eo-evnfm-crypto>
    <eric-am-shared.version>0.190.0-1</eric-am-shared.version>
    <h2.version>2.2.220</h2.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <lombok-plugin.version>1.18.30</lombok-plugin.version>
    <lombok-mapstruct-plugin.version>0.2.0</lombok-mapstruct-plugin.version>
    <junit-jupiter-engine.version>5.9.1</junit-jupiter-engine.version>
    <redis-junit-jupiter.version>1.15.3</redis-junit-jupiter.version>
    <!-- JaCoCo Properties -->
    <sonar.coverage.jacoco.xmlReportPaths>
      ${project.basedir}/eric-am-common-wfs-coverage/target/site/jacoco-aggregate/jacoco.xml,
      ${project.basedir}/../eric-am-common-wfs-coverage/target/site/jacoco-aggregate/jacoco.xml,
      ${project.basedir}/../../eric-am-common-wfs-coverage/target/site/jacoco-aggregate/jacoco.xml,
    </sonar.coverage.jacoco.xmlReportPaths>
    <sonar.coverage.exclusions>
      **/db/utils/CamundaDbMigrationUtils.java
    </sonar.coverage.exclusions>

    <jacoco-maven-plugin.minimum>0.75</jacoco-maven-plugin.minimum>
    <kubernetes.version>20.0.0</kubernetes.version>
    <commons-lang3.version>3.13.0</commons-lang3.version>
    <mockito.version>5.8.0</mockito.version>
    <mockito-inline.version>5.2.0</mockito-inline.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java</artifactId>
        <version>${kubernetes.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java-api</artifactId>
        <version>${kubernetes.version}</version>
      </dependency>
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java-proto</artifactId>
        <version>${kubernetes.version}</version>
      </dependency>
      <dependency>
        <groupId>io.kubernetes</groupId>
        <artifactId>client-java-api-fluent</artifactId>
        <version>${kubernetes.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-server-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-common-services</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-validation</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-command-executor</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-helm-commands</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-helm-commands-context</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-verification</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-kubectl-commands</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-wfs-server</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-common-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-shared-java-utilities</artifactId>
        <version>${eric-am-shared.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-shared-vnfd</artifactId>
        <version>${eric-am-shared.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-am-shared-transaction-retry-utilities</artifactId>
        <version>${eric-am-shared.version}</version>
      </dependency>
      <dependency>
        <groupId>com.ericsson.orchestration.mgmt</groupId>
        <artifactId>eric-eo-evnfm-crypto-api</artifactId>
        <version>${eric-eo-evnfm-crypto}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito-inline.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <testSourceDirectory>${test.source}</testSourceDirectory>
    <testOutputDirectory>${test.output}</testOutputDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <release>${java.version}</release>
            <failOnWarning>true</failOnWarning>
            <showWarnings>true</showWarnings>
            <compilerArgument>-Xlint:-processing</compilerArgument>
            <compilerArgument>-implicit:class</compilerArgument>
            <annotationProcessorPaths>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok-plugin.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-plugin.version}</version>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <configuration>
            <rules>
              <bannedDependencies>
                <excludes>
                  <exclude>org.apache.logging.log4j:log4j-core</exclude>
                  <exclude>log4j</exclude>
                  <exclude>org.slf4j:slf4j-log4j12</exclude>
                  <exclude>commons-logging</exclude>
                </excludes>
                <message>
                  [CONFLICT] In the project were found conflicting logging dependencies that can affect on logging
                  format. Please, check your dependency tree and exclude it. See:
                  https://maven.apache.org/plugins/maven-dependency-plugin/examples/resolving-conflicts-using-the-dependency-tree.html
                </message>
              </bannedDependencies>
            </rules>
            <fail>true</fail>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>test</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <test.source>${project.basedir}/src/test/java</test.source>
        <test.output>${project.build.directory}/test-classes</test.output>
      </properties>
      <build>
        <testResources>
          <testResource>
            <directory>${project.basedir}/src/test/resources</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <!-- attached to Maven test phase -->
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <outputDirectory>target/jacoco-report</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>jacoco-check</id>
                <phase>test</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>${sonar.coverage.exclusions}</exclude>
                    <exclude>**/db/migration/*MigrateFrom*.*</exclude>
                    <exclude>com/ericsson/amcommonwfs/model/**</exclude>
                  </excludes>
                  <rules>
                    <rule implementation="org.jacoco.maven.RuleConfiguration">
                      <element>BUNDLE</element>
                      <limits>
                        <limit implementation="org.jacoco.report.check.Limit">
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>${jacoco-maven-plugin.minimum}</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <parallel>none</parallel>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>itest</id>
      <properties>
        <test.source>${project.basedir}/src/itest/java</test.source>
        <test.output>${project.build.directory}/itest-classes</test.output>
        <skipCloudContractTests>true</skipCloudContractTests>
      </properties>
      <build>
        <testResources>
          <testResource>
            <directory>${project.basedir}/src/itest/resources</directory>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter-engine.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <parallel>none</parallel>
              <reportsDirectory>${project.build.directory}/surefire-itest-reports</reportsDirectory>
              <argLine>
                --add-opens java.base/java.lang=ALL-UNNAMED
              </argLine>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>checkstyle</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>validate</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <configLocation>./checkstyle.xml</configLocation>
                  <failOnViolation>true</failOnViolation>
                  <logViolationsToConsole>true</logViolationsToConsole>
                  <includeTestSourceDirectory>true</includeTestSourceDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>acceptance</id>
      <modules>
        <module>eric-am-common-wfs-testware</module>
      </modules>
      <properties>
        <test.source>${project.basedir}/src/main/java</test.source>
        <test.output>${project.build.directory}/test-classes</test.output>
        <skipAcceptanceTests/>
        <skipCloudContractTests>true</skipCloudContractTests>
      </properties>
    </profile>
    <profile>
      <id>license</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <configuration>
              <header>./license/copyright.txt</header>
              <properties>
                <license.year>2024</license.year>
              </properties>
              <excludes>
                <exclude>license/</exclude>
                <exclude>am-integration-charts/</exclude>
                <exclude>.project_*</exclude>
                <exclude>**/.helmignore</exclude>
                <exclude>**/_helpers.tpl</exclude>
                <exclude>**/VERSION*</exclude>
                <exclude>**/*.bpmn</exclude>
                <exclude>**/*.config</exclude>
                <exclude>**/*processes.xml</exclude>
                <exclude>**/test/resources/</exclude>
                <exclude>design-rule-check-report*</exclude>
                <exclude>*artifact.properties</exclude>
                <exclude>**/resources/db/</exclude>
                <exclude>**/camunda/migration/</exclude>
                <exclude>charts/eric-am-common-dependency/</exclude>
              </excludes>
              <headerDefinitions>
                <headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
                <headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
              </headerDefinitions>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
