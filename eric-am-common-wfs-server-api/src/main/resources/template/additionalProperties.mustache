{{!
    COPYRIGHT Ericsson 2024



    The copyright to the computer program(s) herein is the property of

    Ericsson Inc. The programs may be used and/or copied only with written

    permission from Ericsson Inc. or in accordance with the terms and

    conditions stipulated in the agreement/contract under which the

    program(s) have been supplied.
}}
{{!
  No field has been modified from original template.
  Original file https://github.com/OpenAPITools/openapi-generator/blob/d27fa00cf55d3d7aae46bb9f8affbf33f057432e/modules/openapi-generator/src/main/resources/JavaSpring/additionalProperties.mustache
}}
{{#additionalPropertiesType}}
    /**
    * A container for additional, undeclared properties.
    * This is a holder for any undeclared properties as specified with
    * the 'additionalProperties' keyword in the OAS document.
    */
    private Map<String, {{{.}}}> additionalProperties;

    /**
    * Set the additional (undeclared) property with the specified name and value.
    * If the property does not already exist, create it otherwise replace it.
    */
    @JsonAnySetter
    public {{classname}} putAdditionalProperty(String key, {{{.}}} value) {
        if (this.additionalProperties == null) {
            this.additionalProperties = new HashMap<String, {{{.}}}>();
        }
        this.additionalProperties.put(key, value);
        return this;
    }

    /**
    * Return the additional (undeclared) property.
    */
    @JsonAnyGetter
    public Map<String, {{{.}}}> getAdditionalProperties() {
        return additionalProperties;
    }

    /**
    * Return the additional (undeclared) property with the specified name.
    */
    public {{{.}}} getAdditionalProperty(String key) {
        if (this.additionalProperties == null) {
            return null;
        }
        return this.additionalProperties.get(key);
    }
{{/additionalPropertiesType}}